//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class NuGetResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal NuGetResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.NuGetResources", typeof(NuGetResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous command &apos;{0}&apos;. Possible values: {1}..
        /// </summary>
        internal static string AmbiguousCommand {
            get {
                return ResourceManager.GetString("AmbiguousCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ambiguous option &apos;{0}&apos;. Possible values: {1}..
        /// </summary>
        internal static string AmbiguousOption {
            get {
                return ResourceManager.GetString("AmbiguousOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; parameter must contain a property access expression as the top level expression in the tree.
        /// </summary>
        internal static string ArgumentMustBePropertyExpression {
            get {
                return ResourceManager.GetString("ArgumentMustBePropertyExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building project for target framework &apos;{0}&apos;..
        /// </summary>
        internal static string BuildingProjectTargetingFramework {
            get {
                return ResourceManager.GetString("BuildingProjectTargetingFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: {0}.
        /// </summary>
        internal static string CommandLine_Warning {
            get {
                return ResourceManager.GetString("CommandLine_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key &apos;{0}&apos; not found..
        /// </summary>
        internal static string ConfigCommandKeyNotFound {
            get {
                return ResourceManager.GetString("ConfigCommandKeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (y/N) .
        /// </summary>
        internal static string ConsoleConfirmMessage {
            get {
                return ResourceManager.GetString("ConsoleConfirmMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to y.
        /// </summary>
        internal static string ConsoleConfirmMessageAccept {
            get {
                return ResourceManager.GetString("ConsoleConfirmMessageAccept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password: .
        /// </summary>
        internal static string Credentials_Password {
            get {
                return ResourceManager.GetString("Credentials_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide proxy credentials:.
        /// </summary>
        internal static string Credentials_ProxyCredentials {
            get {
                return ResourceManager.GetString("Credentials_ProxyCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide credentials for: {0}.
        /// </summary>
        internal static string Credentials_RequestCredentials {
            get {
                return ResourceManager.GetString("Credentials_RequestCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UserName: .
        /// </summary>
        internal static string Credentials_UserName {
            get {
                return ResourceManager.GetString("Credentials_UserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No description was provided for this command..
        /// </summary>
        internal static string DefaultCommandDescription {
            get {
                return ResourceManager.GetString("DefaultCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the symbol server.
        /// </summary>
        internal static string DefaultSymbolServer {
            get {
                return ResourceManager.GetString("DefaultSymbolServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete canceled.
        /// </summary>
        internal static string DeleteCommandCanceled {
            get {
                return ResourceManager.GetString("DeleteCommandCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} will be deleted from the {2}. Would you like to continue?.
        /// </summary>
        internal static string DeleteCommandConfirm {
            get {
                return ResourceManager.GetString("DeleteCommandConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} was deleted successfully..
        /// </summary>
        internal static string DeleteCommandDeletedPackage {
            get {
                return ResourceManager.GetString("DeleteCommandDeletedPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting {0} {1} from the {2}..
        /// </summary>
        internal static string DeleteCommandDeletingPackage {
            get {
                return ResourceManager.GetString("DeleteCommandDeletingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot prompt for input in non-interactive mode..
        /// </summary>
        internal static string Error_CannotPromptForInput {
            get {
                return ResourceManager.GetString("Error_CannotPromptForInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build &apos;{0}&apos;..
        /// </summary>
        internal static string FailedToBuildProject {
            get {
                return ResourceManager.GetString("FailedToBuildProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; exists and will be overwritten.
        /// </summary>
        internal static string FileWillBeOverwritten {
            get {
                return ResourceManager.GetString("FileWillBeOverwritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found 1 project with a packages.config file. ({0}).
        /// </summary>
        internal static string FoundProject {
            get {
                return ResourceManager.GetString("FoundProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found {0} projects with a packages.config file. ({1}).
        /// </summary>
        internal static string FoundProjects {
            get {
                return ResourceManager.GetString("FoundProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; contains invalid package references. .
        /// </summary>
        internal static string InstallCommandInvalidPackageReference {
            get {
                return ResourceManager.GetString("InstallCommandInvalidPackageReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All packages listed in {0} are already installed..
        /// </summary>
        internal static string InstallCommandNothingToInstall {
            get {
                return ResourceManager.GetString("InstallCommandNothingToInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &quot;{0}&quot; is already installed..
        /// </summary>
        internal static string InstallCommandPackageAlreadyExists {
            get {
                return ResourceManager.GetString("InstallCommandPackageAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version string specified for package reference &apos;{0}&apos; is invalid..
        /// </summary>
        internal static string InstallCommandPackageReferenceInvalidVersion {
            get {
                return ResourceManager.GetString("InstallCommandPackageReferenceInvalidVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package restore is disabled by default. To give consent, open the Visual Studio Options dialog, click on Package Manager node and check &apos;Allow NuGet to download missing packages during build.&apos; You can also give consent by setting the environment variable &apos;EnableNuGetPackageRestore&apos; to &apos;true&apos;..
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 默认情况下已禁用程序包还原。若要允许还原程序包，请打开 Visual Studio 的“选项”对话框，单击“程序包管理器”节点，然后选中“允许 NuGet 在生成期间下载缺少的程序包”。还可以通过将环境变量“EnableNuGetPackageRestore”设置为“true”来允许还原程序包。.
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_chs {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_chs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 還原封裝預設為停用。 若同意，請開啟 Visual Studio 選項對話框，按一下 [封裝管理員] 節點並勾選 [建置時允許 NuGet 下載缺少的封裝]。 您也可以透過設定環境變數「EnableNuGetPackageRestore」設定為「true」來表示同意。.
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_cht {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_cht", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Obnovení balíèku je ve výchozím nastavení zakázáno. Chcete-li udìlit souhlas, otevøete dialogové okno Možnosti produktu Visual Studio, kliknìte na uzel Správce balíèkù a zaškrtnìte možnost &apos;Povolit rozhraní NuGet stáhnout chybìjící balíèky bìhem sestavení&apos;. Souhlas mùžete udìlit také nastavením promìnné prostøedí EnableNuGetPackageRestore na hodnotu true..
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_csy {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_csy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Die Paketwiederherstellung ist standardmäßig deaktiviert. Wenn Sie Ihre Zustimmung erteilen möchten, öffnen Sie das Dialogfeld &quot;Optionen&quot; von Visual Studio, klicken Sie auf den Knoten &quot;Paket-Manager&quot;, und aktivieren Sie dann &quot;NuGet das Herunterladen fehlender Pakete während des Builds erlauben&quot;. Sie können Ihre Zustimmung erteilen, indem Sie die Umgebungsvariable &quot;EnableNuGetPackageRestore&quot; auf &quot;true&quot; festlegen..
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_deu {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_deu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to De manera predeterminada, restauración de paquetes está deshabilitada. Para dar su consentimiento, abra el cuadro de diálogo Opciones de Visual Studio, haga clic en el nodo Administrador de paquetes y active la opción para permitir que NuGet descargue los paquetes faltantes durante la compilación. También puede dar su consentimiento al establecer la variable de entorno &apos;EnableNuGetPackageRestore&apos; en &apos;true&apos;..
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_esn {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_esn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to La fonctionnalité de restauration des packages est désactivée par défaut. Pour donner votre accord, ouvrez la boîte de dialogue Options de Visual Studio, cliquez sur le nœud Gestionnaire de package et activez l’option « Autoriser NuGet à télécharger les packages manquants lors de la génération ». Vous pouvez également donner votre accord en définissant la variable d’environnement « EnableNuGetPackageRestore » sur « true »..
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_fra {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_fra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Il ripristino dei pacchetti è disabilitato per impostazione predefinita. Per abilitarlo, aprire la finestra di dialogo Opzioni di Visual Studio, fare clic sul nodo Gestione pacchetti e selezionare l&apos;opzione che consente a NuGet di scaricare pacchetti mancanti durante la compilazione. È anche possibile abilitare il ripristino dei pacchetti impostando la variabile di ambiente &apos;EnableNuGetPackageRestore&apos; su &apos;true&apos;..
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_ita {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_ita", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to パッケージの復元は既定で無効になっています。確認のため、Visual Studio の [オプション] ダイアログ ボックスを開き、Package Manager ノードをクリックして、[NuGet がビルド中に存在しないパッケージをダウンロードするのを許可する] チェック ボックスをオンにします。また、環境変数 &apos;EnableNuGetPackageRestore&apos; を true に設定して確認することもできます。.
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_jpn {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_jpn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 패키지 복원은 기본적으로 사용하지 않도록 설정됩니다. 동의하려면 Visual Studio 옵션 대화 상자를 열어 패키지 관리자 노드를 클릭하고 &apos;빌드하는 동안 누락된 패키지를 다운로드하도록 NuGet 허용&apos;을 선택합니다. 환경 변수 &apos;EnableNuGetPackageRestore&apos;를 &apos;true&apos;로 설정해 동의할 수도 있습니다..
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_kor {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_kor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Przywracanie pakietów jest domyślnie wyłączone. Aby wyrazić zgodę, otwórz okno dialogowe Opcje programu Visual Studio, kliknij węzeł Menedżer pakietów i zaznacz pozycję „Zezwalaj programowi NuGet na pobieranie brakujących pakietów podczas kompilowania”. Zgodę możesz także wyrazić, ustawiając zmienną środowiskową „EnableNuGetPackageRestore” na wartość „true”..
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_plk {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_plk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A restauração de pacotes está desabilitada por padrão. Para dar permissão, abra o diálogo Opções do Visual Studio, clique no nó do Gerenciador de Pacotes e marque &apos;Permitir que o NuGet baixe os pacotes ausentes durante a compilação&apos;. Também é possível dar permissão configurando a variável de ambiente &apos;EnableNuGetPackageRestore&apos; para &apos;true&apos;..
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_ptb {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_ptb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to По умолчанию восстановление пакетов выключено. Чтобы разрешить его, откройте диалоговое окно &quot;Параметры&quot; в Visual Studio, щелкните узел диспетчера пакетов и установите флажок &quot;Разрешить NuGet загружать недостающие пакеты при построении&quot;. Это также можно сделать, задав для переменной среды &quot;EnableNuGetPackageRestore&quot; значение &quot;true&quot;..
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_rus {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_rus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paketi geri yükleme varsayýlan olarak devre dýþý. Ýzin vermek için Visual Studio Seçenekleri iletiþim kutusunu açýn, Package Manager  (Paket Yöneticisi) düðümünü týklatýn ve &apos;Allow NuGet to download missing packages during build&apos; (NuGet&apos;in derleme sýrasýnda eksik paketleri indirmesine izin ver) öðesini iþaretleyin. Ayrýca &apos;EnableNuGetPackageRestore&apos; ortam deðiþkenini &apos;true&apos; olarak ayarlayarak da izin verebilirsiniz..
        /// </summary>
        internal static string InstallCommandPackageRestoreConsentNotFound_trk {
            get {
                return ResourceManager.GetString("InstallCommandPackageRestoreConsentNotFound_trk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: invalid arguments..
        /// </summary>
        internal static string InvalidArguments {
            get {
                return ResourceManager.GetString("InvalidArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No packages.config or solution file specified. Use the -self switch to update NuGet.exe..
        /// </summary>
        internal static string InvalidFile {
            get {
                return ResourceManager.GetString("InvalidFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option value: &apos;{0} {1}&apos;.
        /// </summary>
        internal static string InvalidOptionValueError {
            get {
                return ResourceManager.GetString("InvalidOptionValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified source &apos;{0}&apos; is invalid. Please provide a valid source..
        /// </summary>
        internal static string InvalidSource {
            get {
                return ResourceManager.GetString("InvalidSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No packages found..
        /// </summary>
        internal static string ListCommandNoPackages {
            get {
                return ResourceManager.GetString("ListCommandNoPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the NuGet gallery.
        /// </summary>
        internal static string LiveFeed {
            get {
                return ResourceManager.GetString("LiveFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking for installed packages in &apos;{0}&apos;..
        /// </summary>
        internal static string LookingForInstalledPackages {
            get {
                return ResourceManager.GetString("LookingForInstalledPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both packages define a dependency on the framework assembly &apos;{0}&apos; but have different target frameworks for that dependency. Framework assembly references cannot be merged at this time..
        /// </summary>
        internal static string MergeCommandAssemblyReferenceConflict {
            get {
                return ResourceManager.GetString("MergeCommandAssemblyReferenceConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find source package file: &apos;{0}&apos;.
        /// </summary>
        internal static string MergeCommandCannotFindSourceFile {
            get {
                return ResourceManager.GetString("MergeCommandCannotFindSourceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both packages define a dependency set targetting &apos;{0}&apos;. Individual dependency sets cannot be merged at this time..
        /// </summary>
        internal static string MergeCommandDependencySetConflict {
            get {
                return ResourceManager.GetString("MergeCommandDependencySetConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both packages define the &apos;{0}&apos; file. File contents cannot be merged at this time..
        /// </summary>
        internal static string MergeCommandFileConflict {
            get {
                return ResourceManager.GetString("MergeCommandFileConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing option value for: &apos;{0}&apos;.
        /// </summary>
        internal static string MissingOptionValueError {
            get {
                return ResourceManager.GetString("MissingOptionValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No API Key was provided and no API Key could be found for {0}. To save an API Key for a source use the &apos;setApiKey&apos; command..
        /// </summary>
        internal static string NoApiKeyFound {
            get {
                return ResourceManager.GetString("NoApiKeyFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No projects found with packages.config..
        /// </summary>
        internal static string NoProjectsFound {
            get {
                return ResourceManager.GetString("NoProjectsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NuGet official package source.
        /// </summary>
        internal static string OfficialPackageSourceName {
            get {
                return ResourceManager.GetString("OfficialPackageSourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;Verbose&apos; has been deprecated. Use &apos;Verbosity&apos; instead..
        /// </summary>
        internal static string Option_VerboseDeprecated {
            get {
                return ResourceManager.GetString("Option_VerboseDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [option] on &apos;{0}&apos; is invalid without a setter..
        /// </summary>
        internal static string OptionInvalidWithoutSetter {
            get {
                return ResourceManager.GetString("OptionInvalidWithoutSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added file &apos;{0}&apos;..
        /// </summary>
        internal static string PackageCommandAddedFile {
            get {
                return ResourceManager.GetString("PackageCommandAddedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to build package from &apos;{0}&apos;..
        /// </summary>
        internal static string PackageCommandAttemptingToBuildPackage {
            get {
                return ResourceManager.GetString("PackageCommandAttemptingToBuildPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to build symbols package for &apos;{0}&apos;..
        /// </summary>
        internal static string PackageCommandAttemptingToBuildSymbolsPackage {
            get {
                return ResourceManager.GetString("PackageCommandAttemptingToBuildSymbolsPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File from dependency is changed. Adding file &apos;{0}&apos;..
        /// </summary>
        internal static string PackageCommandFileFromDependencyIsChanged {
            get {
                return ResourceManager.GetString("PackageCommandFileFromDependencyIsChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File from dependency is not changed. File &apos;{0}&apos; is not added..
        /// </summary>
        internal static string PackageCommandFileFromDependencyIsNotChanged {
            get {
                return ResourceManager.GetString("PackageCommandFileFromDependencyIsNotChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description: {0}.
        /// </summary>
        internal static string PackageCommandIssueDescription {
            get {
                return ResourceManager.GetString("PackageCommandIssueDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution: {0}.
        /// </summary>
        internal static string PackageCommandIssueSolution {
            get {
                return ResourceManager.GetString("PackageCommandIssueSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issue: {0}.
        /// </summary>
        internal static string PackageCommandIssueTitle {
            get {
                return ResourceManager.GetString("PackageCommandIssueTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build package. Ensure &apos;{0}&apos; includes assembly files. For help on building symbols package, visit {1}..
        /// </summary>
        internal static string PackageCommandNoFilesForLibPackage {
            get {
                return ResourceManager.GetString("PackageCommandNoFilesForLibPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to build package. Ensure &apos;{0}&apos; includes source and symbol files. For help on building symbols package, visit {1}..
        /// </summary>
        internal static string PackageCommandNoFilesForSymbolsPackage {
            get {
                return ResourceManager.GetString("PackageCommandNoFilesForSymbolsPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} issue(s) found with package &apos;{1}&apos;..
        /// </summary>
        internal static string PackageCommandPackageIssueSummary {
            get {
                return ResourceManager.GetString("PackageCommandPackageIssueSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a nuspec or project file to use..
        /// </summary>
        internal static string PackageCommandSpecifyInputFileError {
            get {
                return ResourceManager.GetString("PackageCommandSpecifyInputFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully created package &apos;{0}&apos;..
        /// </summary>
        internal static string PackageCommandSuccess {
            get {
                return ResourceManager.GetString("PackageCommandSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate &apos;{0} {1}&apos;. Make sure all packages exist in the packages folder before running update..
        /// </summary>
        internal static string PackageDoesNotExist {
            get {
                return ResourceManager.GetString("PackageDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packing files from &apos;{0}&apos;..
        /// </summary>
        internal static string PackagingFilesFromOutputPath {
            get {
                return ResourceManager.GetString("PackagingFilesFromOutputPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no default source, please specify a source..
        /// </summary>
        internal static string PushCommandNoSourceError {
            get {
                return ResourceManager.GetString("PushCommandNoSourceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your package was pushed..
        /// </summary>
        internal static string PushCommandPackagePushed {
            get {
                return ResourceManager.GetString("PushCommandPackagePushed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pushing {0} to {1}....
        /// </summary>
        internal static string PushCommandPushingPackage {
            get {
                return ResourceManager.GetString("PushCommandPushingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        internal static string ReservedPackageNameAll {
            get {
                return ResourceManager.GetString("ReservedPackageNameAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; on resource type &apos;{1}&apos; is not a type of ResourceManager..
        /// </summary>
        internal static string ResourcePropertyIncorrectType {
            get {
                return ResourceManager.GetString("ResourcePropertyIncorrectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resource type &apos;{0}&apos; does not have an accessible static property named &apos;{1}&apos;..
        /// </summary>
        internal static string ResourceTypeDoesNotHaveProperty {
            get {
                return ResourceManager.GetString("ResourceTypeDoesNotHaveProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanning for projects....
        /// </summary>
        internal static string ScanningForProjects {
            get {
                return ResourceManager.GetString("ScanningForProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API Key &apos;{0}&apos; was saved for {1}..
        /// </summary>
        internal static string SetApiKeyCommandApiKeySaved {
            get {
                return ResourceManager.GetString("SetApiKeyCommandApiKeySaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API Key &apos;{0}&apos; was saved for {1} and {2}..
        /// </summary>
        internal static string SetApiKeyCommandDefaultApiKeysSaved {
            get {
                return ResourceManager.GetString("SetApiKeyCommandDefaultApiKeysSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package source name &apos;All&apos; is a reserved name..
        /// </summary>
        internal static string SourcesCommandAllNameIsReserved {
            get {
                return ResourceManager.GetString("SourcesCommandAllNameIsReserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both UserName and Password must be specified..
        /// </summary>
        internal static string SourcesCommandCredentialsRequired {
            get {
                return ResourceManager.GetString("SourcesCommandCredentialsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled.
        /// </summary>
        internal static string SourcesCommandDisabled {
            get {
                return ResourceManager.GetString("SourcesCommandDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        internal static string SourcesCommandEnabled {
            get {
                return ResourceManager.GetString("SourcesCommandEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source specified is invalid. Please provide a valid source..
        /// </summary>
        internal static string SourcesCommandInvalidSource {
            get {
                return ResourceManager.GetString("SourcesCommandInvalidSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name specified cannot be empty. Please provide a valid name..
        /// </summary>
        internal static string SourcesCommandNameRequired {
            get {
                return ResourceManager.GetString("SourcesCommandNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find any package source(s) matching name: {0}..
        /// </summary>
        internal static string SourcesCommandNoMatchingSourcesFound {
            get {
                return ResourceManager.GetString("SourcesCommandNoMatchingSourcesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No sources found..
        /// </summary>
        internal static string SourcesCommandNoSources {
            get {
                return ResourceManager.GetString("SourcesCommandNoSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registered Sources:.
        /// </summary>
        internal static string SourcesCommandRegisteredSources {
            get {
                return ResourceManager.GetString("SourcesCommandRegisteredSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Source with Name: {0} added successfully..
        /// </summary>
        internal static string SourcesCommandSourceAddedSuccessfully {
            get {
                return ResourceManager.GetString("SourcesCommandSourceAddedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package source with Name: {0} disabled successfully..
        /// </summary>
        internal static string SourcesCommandSourceDisabledSuccessfully {
            get {
                return ResourceManager.GetString("SourcesCommandSourceDisabledSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package source with Name: {0} enabled successfully..
        /// </summary>
        internal static string SourcesCommandSourceEnabledSuccessfully {
            get {
                return ResourceManager.GetString("SourcesCommandSourceEnabledSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package source with Name: {0} removed successfully..
        /// </summary>
        internal static string SourcesCommandSourceRemovedSuccessfully {
            get {
                return ResourceManager.GetString("SourcesCommandSourceRemovedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source specified cannot be empty. Please provide a valid source..
        /// </summary>
        internal static string SourcesCommandSourceRequired {
            get {
                return ResourceManager.GetString("SourcesCommandSourceRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name specified has already been added to the list of available package sources. Please provide a unique name..
        /// </summary>
        internal static string SourcesCommandUniqueName {
            get {
                return ResourceManager.GetString("SourcesCommandUniqueName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source specified has already been added to the list of available package sources. Please provide a unique source..
        /// </summary>
        internal static string SourcesCommandUniqueSource {
            get {
                return ResourceManager.GetString("SourcesCommandUniqueSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package source &quot;{0}&quot; was successfully updated..
        /// </summary>
        internal static string SourcesCommandUpdateSuccessful {
            get {
                return ResourceManager.GetString("SourcesCommandUpdateSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created &apos;{0}&apos; successfully..
        /// </summary>
        internal static string SpecCommandCreatedNuSpec {
            get {
                return ResourceManager.GetString("SpecCommandCreatedNuSpec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; already exists, use -f to overwrite it..
        /// </summary>
        internal static string SpecCommandFileExists {
            get {
                return ResourceManager.GetString("SpecCommandFileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to change from type &apos;{0}&apos; to &apos;{1}&apos;..
        /// </summary>
        internal static string UnableToConvertTypeError {
            get {
                return ResourceManager.GetString("UnableToConvertTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to extract metadata from &apos;{0}&apos;..
        /// </summary>
        internal static string UnableToExtractAssemblyMetadata {
            get {
                return ResourceManager.GetString("UnableToExtractAssemblyMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find &apos;{0}&apos;. Make sure the project has been built..
        /// </summary>
        internal static string UnableToFindBuildOutput {
            get {
                return ResourceManager.GetString("UnableToFindBuildOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File does not exist ({0})..
        /// </summary>
        internal static string UnableToFindFile {
            get {
                return ResourceManager.GetString("UnableToFindFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find &apos;{0}&apos;. Make sure they are specified in packages.config..
        /// </summary>
        internal static string UnableToFindPackages {
            get {
                return ResourceManager.GetString("UnableToFindPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find solution &apos;{0}&apos;..
        /// </summary>
        internal static string UnableToFindSolution {
            get {
                return ResourceManager.GetString("UnableToFindSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate the packages folder. Try specifying it using the repositoryPath switch..
        /// </summary>
        internal static string UnableToLocatePackagesFolder {
            get {
                return ResourceManager.GetString("UnableToLocatePackagesFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate project file for &apos;{0}&apos;..
        /// </summary>
        internal static string UnableToLocateProjectFile {
            get {
                return ResourceManager.GetString("UnableToLocateProjectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown command: &apos;{0}&apos;.
        /// </summary>
        internal static string UnknowCommandError {
            get {
                return ResourceManager.GetString("UnknowCommandError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown option: &apos;{0}&apos;.
        /// </summary>
        internal static string UnknownOptionError {
            get {
                return ResourceManager.GetString("UnknownOptionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for updates from {0}..
        /// </summary>
        internal static string UpdateCommandCheckingForUpdates {
            get {
                return ResourceManager.GetString("UpdateCommandCheckingForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently running NuGet.exe {0}..
        /// </summary>
        internal static string UpdateCommandCurrentlyRunningNuGetExe {
            get {
                return ResourceManager.GetString("UpdateCommandCurrentlyRunningNuGetExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NuGet.exe is up to date..
        /// </summary>
        internal static string UpdateCommandNuGetUpToDate {
            get {
                return ResourceManager.GetString("UpdateCommandNuGetUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find &apos;{0}&apos; package..
        /// </summary>
        internal static string UpdateCommandUnableToFindPackage {
            get {
                return ResourceManager.GetString("UpdateCommandUnableToFindPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid NuGet.CommandLine package. Unable to locate NuGet.exe within the package..
        /// </summary>
        internal static string UpdateCommandUnableToLocateNuGetExe {
            get {
                return ResourceManager.GetString("UpdateCommandUnableToLocateNuGetExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update successful..
        /// </summary>
        internal static string UpdateCommandUpdateSuccessful {
            get {
                return ResourceManager.GetString("UpdateCommandUpdateSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating NuGet.exe to {0}..
        /// </summary>
        internal static string UpdateCommandUpdatingNuGet {
            get {
                return ResourceManager.GetString("UpdateCommandUpdatingNuGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating &apos;{0}&apos;....
        /// </summary>
        internal static string UpdatingProject {
            get {
                return ResourceManager.GetString("UpdatingProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using &apos;{0}&apos; for metadata..
        /// </summary>
        internal static string UsingNuspecForMetadata {
            get {
                return ResourceManager.GetString("UsingNuspecForMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found packages.config. Using packages listed as dependencies.
        /// </summary>
        internal static string UsingPackagesConfigForDependencies {
            get {
                return ResourceManager.GetString("UsingPackagesConfigForDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &quot;{0}&quot; for {1} is a sample value and should be removed..
        /// </summary>
        internal static string Warning_DefaultSpecValue {
            get {
                return ResourceManager.GetString("Warning_DefaultSpecValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace with an appropriate value or remove and it and rebuild your package..
        /// </summary>
        internal static string Warning_DefaultSpecValueSolution {
            get {
                return ResourceManager.GetString("Warning_DefaultSpecValueSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove sample nuspec values..
        /// </summary>
        internal static string Warning_DefaultSpecValueTitle {
            get {
                return ResourceManager.GetString("Warning_DefaultSpecValueTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; was included in the project but doesn&apos;t exist. Skipping....
        /// </summary>
        internal static string Warning_FileDoesNotExist {
            get {
                return ResourceManager.GetString("Warning_FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option &apos;NoPrompt&apos; has been deprecated. Use &apos;NonInteractive&apos; instead..
        /// </summary>
        internal static string Warning_NoPromptDeprecated {
            get {
                return ResourceManager.GetString("Warning_NoPromptDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version &quot;{0}&quot; does not follow semantic versioning guidelines..
        /// </summary>
        internal static string Warning_SemanticVersion {
            get {
                return ResourceManager.GetString("Warning_SemanticVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update your nuspec file or use the AssemblyInformationalVersion assembly attribute to specify a semantic version as described at http://semver.org. .
        /// </summary>
        internal static string Warning_SemanticVersionSolution {
            get {
                return ResourceManager.GetString("Warning_SemanticVersionSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use semantic versioning.
        /// </summary>
        internal static string Warning_SemanticVersionTitle {
            get {
                return ResourceManager.GetString("Warning_SemanticVersionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found symbols package &apos;{0}&apos;, but no API key was specified for the symbol server. To save an API Key, run &apos;NuGet.exe setApiKey [your API key from http://www.NuGet.org]&apos;..
        /// </summary>
        internal static string Warning_SymbolServerNotConfigured {
            get {
                return ResourceManager.GetString("Warning_SymbolServerNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} was not specified. Using &apos;{1}&apos;..
        /// </summary>
        internal static string Warning_UnspecifiedField {
            get {
                return ResourceManager.GetString("Warning_UnspecifiedField", resourceCulture);
            }
        }
    }
}
